{#
| Variable                        | Type     | Description                                                                  |
|---------------------------------|----------|------------------------------------------------------------------------------|
| component                       | object   | Contains merchant settings for fields from twilight.json `component` section |
| component.main_title            | object[] | Main title collection                                                        |
| component.product_collection_select | object[] | Product collection items                                                    |
| component.product_collection_select[].product_title | string | Product title                                                           |
| component.product_collection_select[].description | string | Product description                                                    |
| component.product_collection_select[].url | string | Product URL                                                           |
| component.product_collection_select[].image | string | Product image URL                                                      |
| position                        | int      | Sorting number start from zero                                               |
#}

<section class="alcantara-picker-section py-16 bg-white">
  <div class="max-w-[1200px] mx-auto px-4 md:px-8 lg:px-12 xl:px-0">
    <!-- Main Heading -->
    <h2 class="text-center mb-12">
      <div class="text-center">
        <span class="arabic-heading" data-language="ar">
          اختار الجوال اللي<br />تستخدمه
        </span>
        <span class="english-heading" data-language="en" style="display: none;">
          Choose the phone<br />you use
        </span>
      </div>
    </h2>

    <!-- Product Picker Grid -->
    <div class="flex flex-col md:flex-row gap-8 justify-center items-center">
      {% if component['product-collection-select'] is defined %}
        {% for item in component['product-collection-select'] %}
          <div class="text-center w-full max-w-[320px]">
            <div class="mb-2">
              <span class="product-name" data-language="ar">
                {% if item['product-title'] is defined and item['product-title'] %}
                  {{ item['product-title']|raw }}
                {% else %}
                  عنوان المنتج مفقود
                {% endif %}
              </span>
              <span class="product-name" data-language="en" style="display: none;">
                {% if item['product-title.en'] is defined and item['product-title.en'] %}
                  {{ item['product-title.en']|raw }}
                {% elif item['product-title'] is defined and item['product-title'] %}
                  {{ item['product-title']|raw }}
                {% else %}
                  Product Title Missing
                {% endif %}
              </span>
            </div>
            <div class="mb-2">
              <span class="compatibility-text" data-language="ar">
                {% if item['description'] is defined and item['description'] %}
                  {{ item['description']|raw }}
                {% else %}
                  الوصف مفقود
                {% endif %}
              </span>
              <span class="compatibility-text" data-language="en" style="display: none;">
                {% if item['description.en'] is defined and item['description.en'] %}
                  {{ item['description.en']|raw }}
                {% elif item['description'] is defined and item['description'] %}
                  {{ item['description']|raw }}
                {% else %}
                  Description Missing
                {% endif %}
              </span>
            </div>
            <div class="mb-4 flex justify-center">
              <a 
                href="https://salla.sa/alcanta.sa/eQQmyzO" 
                class="view-collection-btn"
                style="text-decoration: none; border: none; background: none; cursor: pointer; display: inline-flex; align-items: center;"
              >
                <span class="arrow-icon"></span>
                <span data-language="ar">عرض المجموعة</span>
                <span data-language="en" style="display: none;">View Collection</span>
              </a>
            </div>
            {% if item['image'] is defined and item['image'] %}
              <a href="https://salla.sa/alcanta.sa/eQQmyzO">
                <img 
                  src="{{ item['image'] }}" 
                  alt="{{ item['product-title']|default('Product') }}" 
                  class="product-image"
                />
              </a>
            {% else %}
              <a href="https://salla.sa/alcanta.sa/eQQmyzO">
                <div class="product-image" style="background: #f0f0f0; display: flex; align-items: center; justify-content: center; color: #666;">
                  Image Missing
                </div>
              </a>
            {% endif %}
          </div>
        {% endfor %}
      {% else %}
        <div class="text-center">
          <p>No product collection data found</p>
        </div>
      {% endif %}
    </div>
  </div>
</section>

<script>
// Products Collection Language State Management
window.productsCollectionLanguageState = {
    current: '{{ user.language.code }}',
    setLanguage: function(lang) {
        this.current = lang;
        localStorage.setItem('products_collection_language', lang);
        this.updateContent();
        console.log('Products Collection: Language set to', lang);
    },
    updateContent: function() {
        const elements = document.querySelectorAll('[data-language]');
        elements.forEach(element => {
            const elementLang = element.getAttribute('data-language');
            if (elementLang === this.current) {
                element.style.display = '';
                element.classList.remove('hidden');
                element.style.visibility = 'visible';
            } else {
                element.style.display = 'none';
                element.classList.add('hidden');
                element.style.visibility = 'hidden';
            }
        });
        
        // Force reflow for better display
        document.body.offsetHeight;
        
        console.log('Products Collection: Content updated for language', this.current);
    },
    getStoredLanguage: function() {
        return localStorage.getItem('products_collection_language') || '{{ user.language.code }}';
    },
    applyStoredLanguage: function() {
        const storedLang = this.getStoredLanguage();
        this.setLanguage(storedLang);
        console.log('Products Collection: Applied stored language:', storedLang);
    },
    detectCurrentLanguage: function() {
        const urlLang = new URLSearchParams(window.location.search).get('lang');
        const storedLang = localStorage.getItem('currentLanguage');
        const domLang = document.documentElement.lang || document.querySelector('html').getAttribute('lang');
        const userLang = '{{ user.language.code }}';
        
        console.log('Products Collection: Language detection details:');
        console.log('  - urlLang:', urlLang);
        console.log('  - storedLang:', storedLang);
        console.log('  - domLang:', domLang);
        console.log('  - userLang:', userLang);
        
        // Priority order: URL parameter > user language > DOM language > stored language > fallback
        const currentLang = urlLang || userLang || domLang || storedLang || 'en';
        
        console.log('Products Collection: Final language detected:', currentLang);
        return currentLang;
    }
};

// Apply stored language immediately when script loads
(function() {
    setTimeout(() => {
        const detectedLang = window.productsCollectionLanguageState.detectCurrentLanguage();
        window.productsCollectionLanguageState.setLanguage(detectedLang);
        console.log('Products Collection: Initial language applied:', detectedLang);
    }, 100);
})();

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        const detectedLang = window.productsCollectionLanguageState.detectCurrentLanguage();
        window.productsCollectionLanguageState.setLanguage(detectedLang);
        console.log('Products Collection: DOMContentLoaded - language applied:', detectedLang);
    }, 200);
});

// Listen for custom language change events from header
document.addEventListener('languageChanged', function(event) {
    const newLang = event.detail.to || event.detail.language;
    console.log('Products Collection: Language change event received:', newLang);
    console.log('Products Collection: Event details:', event.detail);
    window.productsCollectionLanguageState.setLanguage(newLang);
});

// Listen for Salla custom language change events
document.addEventListener('salla:language:changed', function(event) {
    const lang = event.detail.language || event.detail.code;
    console.log('Products Collection: Salla custom language change event received:', lang);
    window.productsCollectionLanguageState.setLanguage(lang);
});

// Listen for Salla's language change events
if (window.salla && window.salla.event) {
    salla.event.on('language::changed', function(event) {
        console.log('Products Collection: Salla language event received:', event.detail.language);
        window.productsCollectionLanguageState.setLanguage(event.detail.language);
    });
    
    salla.event.on('twilight::ready', function() {
        console.log('Products Collection: Twilight ready, applying stored language');
        window.productsCollectionLanguageState.applyStoredLanguage();
    });
    
    salla.event.on('page.view', function(event) {
        console.log('Products Collection: Page view event, applying stored language');
        setTimeout(() => {
            window.productsCollectionLanguageState.applyStoredLanguage();
        }, 100);
    });
}

// Simple language change function that works with Salla
function changeProductsCollectionLanguage(lang) {
    console.log('Products Collection: Changing language to:', lang);
    window.productsCollectionLanguageState.setLanguage(lang);
    
    // Update Salla's language if available
    if (window.salla && window.salla.language) {
        window.salla.language.current = lang;
        salla.event.dispatch('language::changed', { language: lang });
    }
}

// Monitor for URL changes
let currentUrl = window.location.href;
setInterval(() => {
    if (window.location.href !== currentUrl) {
        currentUrl = window.location.href;
        console.log('Products Collection: URL changed, maintaining stored language');
        window.productsCollectionLanguageState.applyStoredLanguage();
    }
}, 500);

// Monitor for DOM changes
const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
            const target = mutation.target;
            if (target.hasAttribute('data-language')) {
                setTimeout(() => {
                    window.productsCollectionLanguageState.updateContent();
                }, 10);
            }
        }
    });
});

// Start observing when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    const elements = document.querySelectorAll('[data-language]');
    elements.forEach(element => {
        observer.observe(element, { attributes: true, attributeFilter: ['style'] });
    });
});

// Apply stored language when page becomes visible
document.addEventListener('visibilitychange', function() {
    if (!document.hidden) {
        console.log('Products Collection: Page became visible, applying stored language');
        setTimeout(() => {
            window.productsCollectionLanguageState.applyStoredLanguage();
        }, 50);
    }
});

// Make the function globally available
window.changeProductsCollectionLanguage = changeProductsCollectionLanguage;

// Add manual test function for debugging
window.testProductsCollectionLanguage = function(lang) {
    console.log('Products Collection: Manual test called with language:', lang);
    if (lang) {
        localStorage.setItem('currentLanguage', lang);
        document.documentElement.lang = lang;
        document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';
    }
    const detectedLang = window.productsCollectionLanguageState.detectCurrentLanguage();
    window.productsCollectionLanguageState.setLanguage(detectedLang);
    console.log('Products Collection: Manual test completed - language set to:', detectedLang);
};

// Add test buttons for manual language switching (for debugging)
setTimeout(() => {
    const testDiv = document.createElement('div');
    testDiv.style.position = 'fixed';
    testDiv.style.top = '120px';
    testDiv.style.right = '10px';
    testDiv.style.zIndex = '9999';
    testDiv.style.background = 'rgba(0,0,0,0.8)';
    testDiv.style.color = 'white';
    testDiv.style.padding = '10px';
    testDiv.style.borderRadius = '5px';
    testDiv.style.fontSize = '12px';
    testDiv.innerHTML = `
        <div style="margin-bottom: 5px; font-weight: bold;">Products Collection Test:</div>
        <button onclick="window.testProductsCollectionLanguage('en')" style="margin: 2px; padding: 5px; background: #4CAF50; color: white; border: none; border-radius: 3px; cursor: pointer;">English</button>
        <button onclick="window.testProductsCollectionLanguage('ar')" style="margin: 2px; padding: 5px; background: #2196F3; color: white; border: none; border-radius: 3px; cursor: pointer;">Arabic</button>
        <div style="margin-top: 5px; font-size: 10px; opacity: 0.8;">Current: <span id="current-lang-display">Detecting...</span></div>
    `;
    document.body.appendChild(testDiv);
    
    // Update current language display
    const updateLangDisplay = () => {
        const display = document.getElementById('current-lang-display');
        if (display) {
            display.textContent = window.productsCollectionLanguageState.current || 'Unknown';
        }
    };
    
    // Update display initially and after language changes
    updateLangDisplay();
    setInterval(updateLangDisplay, 1000);
}, 1000);
</script>

<style>
.alcantara-picker-section {
  font-family: 'DIN Next LT W23', Arial, sans-serif;
  background-color: #ffffff;
}

.arabic-heading, .english-heading {
  font-family: 'DIN Next LT W23', Arial, sans-serif;
  font-weight: 700;
  font-style: normal;
  font-size: 40px;
  line-height: 42px;
  letter-spacing: 0px;
  text-align: center;
  color: #161616;
}

.product-name {
  text-align: center;
  font-weight: 700;
  font-size: 20px;
  line-height: 24px;
  color: #3C3C3C;
  display: inline-block;
}

.compatibility-text {
  font-family: 'SF Pro', Arial, sans-serif;
  font-size: 10px;
  font-weight: normal;
  line-height: 12px;
  color: rgba(45, 73, 158, 0.61);
}

.view-collection-btn {
  color: black;
  font-family: 'Comfortaa', Arial, sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 130%;
  vertical-align: bottom;
  display: flex;
  align-items: center;
  gap: 8px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  margin: 0;
  transition: all 0.3s ease;
}

.view-collection-btn:hover {
  color: #3a3a3a;
  transform: translateY(-2px);
}

.arrow-icon {
  width: 8.5px;
  height: 10.625px;
  display: inline-block;
  position: relative;
}

.arrow-icon::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 0;
  height: 0;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-right: 8.5px solid black;
  transform: translateY(-50%);
}

.product-image {
  width: 160px !important;
  height: auto !important;
  object-fit: contain !important;
  position: static !important;
  margin-bottom: 0 !important;
  display: block !important;
  justify-content: unset !important;
  align-items: unset !important;
  margin-left: unset !important;
  margin-right: unset !important;
  overflow: visible !important;
  border-radius: 0 !important;
  transition: transform 0.3s ease;
}

.product-image:hover {
  transform: scale(1.05);
}

@media (min-width: 768px) {
  .product-image {
    width: 256px !important;
  }
}

@media (min-width: 1024px) {
  .product-image {
    width: 320px !important;
  }
}

/* Mobile responsive adjustments */
@media (max-width: 767px) {
  .alcantara-picker-section {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  
  .arabic-heading, .english-heading {
    font-size: 32px;
    line-height: 36px;
  }
  
  .flex-col {
    flex-direction: column;
  }
  
  .gap-8 > div {
    margin-bottom: 2rem;
  }
  
  .product-image {
    width: 200px !important;
    margin: 0 auto;
  }
}
</style>