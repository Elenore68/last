<section class="s-block s-block--full-bg banner-component-test" style="display: block !important; visibility: visible !important; opacity: 1 !important; position: relative !important; z-index: 1000 !important;">
    <!-- BANNER COMPONENT IS LOADING - THIS PROVES IT'S BEING CALLED -->
    <div id="banner-test-box" style="background: #ff0000 !important; color: white !important; padding: 20px !important; margin: 10px !important; font-size: 18px !important; font-weight: bold !important; text-align: center !important; display: block !important; visibility: visible !important; opacity: 1 !important; position: relative !important; z-index: 1001 !important;">
        üö® BANNER COMPONENT IS LOADING! üö®<br>
        This red box proves the banner.twig file is being executed!<br>
        <span id="banner-timestamp">Loading at: <script>document.write(new Date().toLocaleTimeString())</script></span>
    </div>
    
    <!-- Debug Info -->
    <div style="background: #f0f0f0; padding: 10px; margin: 10px; border: 1px solid #ccc; font-family: monospace; font-size: 12px;">
        <strong>üîç Banner Debug Info:</strong><br>
        Component: {{ component ? 'Found' : 'Not Found' }}<br>
        Banner Last: {{ component.banner_last ? 'Found' : 'Not Found' }}<br>
        Banner Count: {{ component.banner_last|length }}<br>
        {% if component.banner_last|length > 0 %}
            First Banner: {{ component.banner_last[0] ? 'Has Data' : 'Empty' }}<br>
        {% endif %}
        <strong>Full Component Data:</strong><br>
        {{ component|json_encode }}<br>
    </div>

    {% if component.banner_last and component.banner_last|length > 0 %}
        {% for banner in component.banner_last %}
            <div class="relative">
                <div class="relative w-full h-auto">
                    <!-- Debug: Show what we have -->
                    {% if banner.imageAr or banner.imageEn %}
                        <!-- Arabic Image -->
                        {% if banner.imageAr %}
                        <img
                            src="{{ banner.imageAr }}"
                            alt="Arabic Banner"
                            data-lang="ar"
                            class="localized-img w-full h-auto object-cover"
                            style="display: none;"
                        />
                        {% endif %}

                        <!-- English Image -->
                        {% if banner.imageEn %}
                        <img
                            src="{{ banner.imageEn }}"
                            alt="English Banner"
                            data-lang="en"
                            class="localized-img w-full h-auto object-cover"
                            style="display: none;"
                        />
                        {% endif %}
                    {% else %}
                        <!-- Fallback if no images are configured -->
                        <div class="w-full h-64 bg-gray-200 flex items-center justify-center">
                            <p class="text-gray-500">Banner found but no images configured</p>
                        </div>
                    {% endif %}
                </div>
                
                <div class="absolute inset-0 flex items-center justify-center">
                    <div class="container text-center text-white">
                        <div class="w-full py-20">
                            <h3 class="text-4xl font-bold mb-4">{{ banner.title }}</h3>
                            <p class="text-lg">{{ banner.subtitle }}</p>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    {% else %}
        <!-- No banner configured - show setup instructions -->
        <div class="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-16">
            <div class="container mx-auto px-4 text-center">
                <div class="max-w-2xl mx-auto">
                    <h2 class="text-3xl font-bold mb-4">üé® Banner Component Setup Required</h2>
                    <p class="text-lg mb-6">To display your banner, please configure it in the Salla admin panel:</p>
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg p-6 text-left">
                        <ol class="list-decimal list-inside space-y-2">
                            <li>Go to <strong>Theme Customizer</strong> in your Salla admin</li>
                            <li>Find the <strong>"banner"</strong> component</li>
                            <li>Add your <strong>Arabic image URL</strong> in "ÿßŸÑÿµŸàÿ±ÿ© ÿ®ÿßŸÑÿπÿ±ÿ®Ÿä"</li>
                            <li>Add your <strong>English image URL</strong> in "ÿßŸÑÿµŸàÿ±ÿ© ÿ®ÿßŸÑÿßŸÜÿ¨ŸÑŸäÿ≤Ÿä"</li>
                            <li>Save the changes</li>
                        </ol>
                    </div>
                    <p class="text-sm mt-4 opacity-80">Once configured, the banner will automatically switch between languages!</p>
                </div>
            </div>
        </div>
    {% endif %}
</section>

<script>
  console.log('üö® BANNER SCRIPT LOADING at:', new Date().toLocaleTimeString());
  
  // Monitor banner visibility
  function monitorBanner() {
    const bannerSection = document.querySelector('.banner-component-test');
    const testBox = document.getElementById('banner-test-box');
    
    if (bannerSection && testBox) {
      console.log('‚úÖ Banner elements found');
      
      // Force visibility every 100ms for the first 5 seconds
      let attempts = 0;
      const maxAttempts = 50; // 5 seconds
      
      const keepVisible = setInterval(() => {
        attempts++;
        
        // Force banner to stay visible
        if (bannerSection) {
          bannerSection.style.display = 'block';
          bannerSection.style.visibility = 'visible';
          bannerSection.style.opacity = '1';
        }
        
        if (testBox) {
          testBox.style.display = 'block';
          testBox.style.visibility = 'visible';
          testBox.style.opacity = '1';
          testBox.innerHTML = `üö® BANNER STILL VISIBLE! üö®<br>Attempt: ${attempts}/${maxAttempts}<br>Time: ${new Date().toLocaleTimeString()}`;
        }
        
        if (attempts >= maxAttempts) {
          clearInterval(keepVisible);
          console.log('‚úÖ Banner monitoring completed');
        }
      }, 100);
      
      // Watch for changes
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.target === bannerSection || mutation.target === testBox) {
            console.log('üîç Banner element changed:', mutation);
          }
        });
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true,
        attributes: true,
        attributeFilter: ['style', 'class']
      });
      
    } else {
      console.log('‚ùå Banner elements not found');
    }
  }
  
  // Start monitoring immediately and after DOM loads
  monitorBanner();
  document.addEventListener('DOMContentLoaded', monitorBanner);
  
  // Function to update banner images based on language
  function updateBannerImages(forcedLang = null) {
    // Get language from multiple sources, prioritizing forced language
    let lang = forcedLang;
    
    if (!lang) {
      // Try to get current language from various sources
      lang = document.documentElement.lang ||
             document.querySelector('html').getAttribute('lang') ||
             localStorage.getItem('currentLanguage') ||
             '{{ user.language.code }}' ||
             navigator.language.slice(0, 2) ||
             'ar';
    }

    console.log('Banner: Updating images for language:', lang);
    console.log('Banner: Available images:', document.querySelectorAll('.localized-img').length);

    // Show only the image that matches the current language
    let imageFound = false;
    document.querySelectorAll('.localized-img').forEach((img) => {
      console.log('Banner: Checking image with data-lang:', img.dataset.lang);
      if (img.dataset.lang === lang) {
        img.style.display = 'block';
        img.classList.remove('hidden');
        imageFound = true;
        console.log('Banner: ‚úÖ Showing', lang, 'image');
      } else {
        img.style.display = 'none';
        img.classList.add('hidden');
        console.log('Banner: ‚ùå Hiding', img.dataset.lang, 'image');
      }
    });
    
    if (!imageFound) {
      console.warn('Banner: No image found for language:', lang);
    }
    
    // Store current language for future reference
    localStorage.setItem('currentLanguage', lang);
  }

  // Update images on page load
  document.addEventListener('DOMContentLoaded', function() {
    updateBannerImages();
  });

  // Listen for language changes from header
  document.addEventListener('languageChanged', function(event) {
    console.log('Banner: Language changed event received:', event.detail);
    const newLang = event.detail.to || event.detail.language;
    console.log('Banner: Switching to language:', newLang);
    updateBannerImages(newLang);
  });

  // Also listen for Salla language change events
  if (window.salla && window.salla.event) {
    window.salla.event.on('language::changed', function(data) {
      console.log('Banner: Salla language changed:', data);
      updateBannerImages();
    });
  }

  // Fallback: Check for language changes periodically
  let currentLang = '{{ user.language.code }}' || 'ar';
  setInterval(() => {
    const newLang = document.documentElement.lang || 
                   document.querySelector('html').getAttribute('lang') || 
                   '{{ user.language.code }}' || 'ar';
    if (newLang !== currentLang) {
      console.log('Banner: Language changed from', currentLang, 'to', newLang);
      currentLang = newLang;
      updateBannerImages();
    }
  }, 1000);

  // Initial call
  updateBannerImages();
</script>
