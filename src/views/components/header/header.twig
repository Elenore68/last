{#
| Variable         | Type    | Description                     |
|------------------|---------|---------------------------------|
| cart             | object  |                                 |
| cart.items_count | int     |                                 |
| cart.total       | string  | Formatted total ex: "١٠٠ ر.س"   |
#}
{% set important_links = theme.settings.get('important_links') %}
<header class="store-header">
  {# Top Nav #}
  <div class="top-navbar text-white" style="background-color: #000000;">
    <div class="container flex justify-between items-center py-1">
     

      {# Left side - Cart and Profile #}
      <div class="flex items-center gap-2">
          {# Cart icon #}
          <a href="{{ store.url }}/cart" 
             class="cart-icon text-white hover:opacity-80 transition-opacity" 
             style="
               cursor: pointer;
               display: flex;
               align-items: center;
               justify-content: center;
               width: 32px;
               height: 32px;
               border-radius: 50%;
               background: transparent;
               border: none;
               transition: all 0.3s ease;
               text-decoration: none;
             ">
            <img src="{{ 'images/icons/bitcoin-icons_cart-outline.png'|asset }}" 
                 alt="Cart" 
                 style="
                   width: 18px;
                   height: 18px;
                 " />
          </a>
          
          {# Profile icon #}
          {% if user.type=='user' %}
            <salla-user-menu avatar-only show-header class="text-white"></salla-user-menu>
          {% else %}
              <button class="text-white hover:opacity-80 transition-opacity" 
                      aria-label="user-icon" 
                      onclick="openLoginModal()"
                      style="
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        width: 32px;
                        height: 32px;
                        background: transparent;
                        border: none;
                        cursor: pointer;
                      ">
                <img src="{{ 'images/icons/iconamoon_profile-thin.svg'|asset }}" 
                     alt="Profile" 
                     style="
                       width: 18px;
                       height: 18px;
                       filter: brightness(0) invert(1);
                     " />
              </button>
          {% endif %}
      </div>
      {# Center - Logo #}
      <div class="flex-1 flex justify-center">
          <a class="navbar-brand" href="{{ store.url }}">
              <img fetchpriority="high" width="100%" height="100%" loading="eager" src="{{ 'images/logo.png'|asset }}" alt="{{ store.name }} logo" class="max-h-6">
              {% if is_page('index') %}
                <h1 class="sr-only">{{ store.name }}</h1>
              {% else %}
                <h2 class="sr-only">{{ store.name }}</h2>
              {% endif %}
          </a>
      </div>
       {# Right side - Language #}
      <div class="flex items-center">
              {% if store.settings.is_multilingual or store.settings.currencies_enabled %}
              <div class="flex items-center gap-1 cursor-pointer hover:opacity-80 transition-opacity" onclick="switchLanguage()">
                  <span class="text-white font-comfortaa text-[11px] font-normal leading-[20px]" id="language-toggle-text">
                    {{ user.language.code == 'ar' ? 'En' : 'Ar' }}
                  </span>
                  <img 
                    src="{{ 'images/icons/material-symbols-light_language.png'|asset }}" 
                    alt="Language" 
                    class="w-4 h-4"
                    data-translate-alt="header.language"
                  />
          </div>
          {% endif %}
      </div>
    </div>
  </div>

  {# Main Nav #}
  <div id="mainnav" class="main-nav-container shadow-default bg-black">
      <div class="inner bg-inherit">
          <div class="container">
              <div class="flex items-stretch justify-center relative">
                  <div class="flex items-center">
                      <custom-main-menu></custom-main-menu>
                  </div>
                  
              </div>
          </div>
      </div>
  </div>
</header>
{% if store.scope %}
    <salla-scopes selection="{{ store.scope.display_as == 'popup' ? 'mandatory' : 'optional' }}"></salla-scopes>
{% endif %}

<script>
function switchLanguage() {
    if (window.languageManager) {
        window.languageManager.switchLanguage();
    } else {
        // Get current language from multiple sources
        const currentLanguage = localStorage.getItem('currentLanguage') || 
                               document.documentElement.lang || 
                               '{{ user.language.code }}' || 
                               'ar';
        const newLanguage = currentLanguage === 'ar' ? 'en' : 'ar';
        

        
        // Update HTML lang attribute immediately
        document.documentElement.lang = newLanguage;
        document.querySelector('html').setAttribute('lang', newLanguage);
        
        // Store in localStorage for persistence
        localStorage.setItem('currentLanguage', newLanguage);
        
        // Dispatch custom event for other components to listen
        const languageChangeEvent = new CustomEvent('languageChanged', {
            detail: { 
                from: currentLanguage, 
                to: newLanguage,
                language: newLanguage 
            }
        });
        document.dispatchEvent(languageChangeEvent);
        

        
        // Directly call banner update function if available
        if (window.updateBannerImages) {

            window.updateBannerImages(newLanguage);
        } else {

        }
        
        // Directly call footer update function if available
        if (window.updateFooterTexts) {

            window.updateFooterTexts(newLanguage);
        } else {

        }
        
        // Update the language toggle text
        updateLanguageToggleText(newLanguage);
        
        // Try calling banner and footer functions again after a short delay
        setTimeout(() => {
            if (window.updateBannerImages) {

                window.updateBannerImages(newLanguage);
            }
            if (window.updateFooterTexts) {

                window.updateFooterTexts(newLanguage);
            }
        }, 100);
        
        // Try Salla's language change method
        if (window.salla && window.salla.language) {

            window.salla.language.change(newLanguage);
        } else {

            const currentUrl = window.location.href;
            const baseUrl = currentUrl.split('?')[0];
            window.location.href = baseUrl + '?lang=' + newLanguage;
        }
    }
}

// Function to update language toggle text
function updateLanguageToggleText(currentLang) {
    const toggleText = document.getElementById('language-toggle-text');
    if (toggleText) {
        // Show the opposite language (what we can switch TO)
        toggleText.textContent = currentLang === 'ar' ? 'En' : 'Ar';

    }
}

// Function to open login modal properly
function openLoginModal() {
    // Wait for Salla to be ready
    if (window.salla && window.salla.event) {
        // Try to dispatch the login event
        window.salla.event.dispatch('login::open');
        
        // Ensure the modal appears as overlay
        setTimeout(() => {
            const loginModal = document.querySelector('salla-login-modal');
            if (loginModal) {
                // Force the modal to appear as overlay
                loginModal.style.position = 'fixed';
                loginModal.style.top = '0';
                loginModal.style.left = '0';
                loginModal.style.width = '100%';
                loginModal.style.height = '100%';
                loginModal.style.zIndex = '9999';
                loginModal.style.display = 'flex';
                loginModal.style.alignItems = 'center';
                loginModal.style.justifyContent = 'center';
                loginModal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                
                // Prevent body scroll
                document.body.style.overflow = 'hidden';
            }
        }, 100);
    } else {
        // Fallback: wait for Salla to load
        setTimeout(() => {
            openLoginModal();
        }, 500);
    }
}

// Update language toggle text when language changes
document.addEventListener('languageChanged', function(event) {
    const languageToggleText = document.getElementById('language-toggle-text');
    if (languageToggleText) {
        languageToggleText.textContent = event.detail.language === 'ar' ? 'En' : 'Ar';
            }
        });
        
// Ensure login modal is properly styled when it appears
document.addEventListener('DOMContentLoaded', function() {

    
    // Initialize language on page load
    const currentLang = localStorage.getItem('currentLanguage') || 
                       document.documentElement.lang || 
                       '{{ user.language.code }}' || 
                       'ar';
    

    
    // Update HTML lang attribute
    document.documentElement.lang = currentLang;
    document.querySelector('html').setAttribute('lang', currentLang);
    
    // Update toggle text
    updateLanguageToggleText(currentLang);
    
    // Dispatch initial language event for banner
    setTimeout(() => {
        const languageInitEvent = new CustomEvent('languageChanged', {
            detail: { 
                from: currentLang, 
                to: currentLang,
                language: currentLang,
                initial: true
            }
        });
        document.dispatchEvent(languageInitEvent);

    }, 100);
    
    // Listen for login modal events
    if (window.salla && window.salla.event) {
        window.salla.event.on('login::opened', function() {
            const loginModal = document.querySelector('salla-login-modal');
            if (loginModal) {
                // Force modal styling
                loginModal.style.position = 'fixed';
                loginModal.style.top = '0';
                loginModal.style.left = '0';
                loginModal.style.width = '100%';
                loginModal.style.height = '100%';
                loginModal.style.zIndex = '9999';
                loginModal.style.display = 'flex';
                loginModal.style.alignItems = 'center';
                loginModal.style.justifyContent = 'center';
                loginModal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                
                // Prevent body scroll
                document.body.style.overflow = 'hidden';
            }
        });
        
        window.salla.event.on('login::closed', function() {
            // Restore body scroll
            document.body.style.overflow = 'auto';
        });
    }
});

</script>
