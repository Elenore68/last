{# ############## Shared Variables in all views ################
| Variable                                           | Type     | Description                                                                                              |
|----------------------------------------------------|----------|----------------------------------------------------------------------------------------------------------|
| store                                              | Store    |                                                                                                          |
| store.id                                           | int      |                                                                                                          |
| store.name                                         | string   |                                                                                                          |
| store.username                                     | string   |                                                                                                          |
| store.description                                  | string   |                                                                                                          |
| store.slogan                                       | ?string  | * if feature in twilight.json                                                                            |
| store.logo                                         | string   |                                                                                                          |
| store.url                                          | string   |                                                                                                          |
| store.api                                          | string   | the api url for current store                                                                            |
| store.icon                                         | string   | *fav icon url                                                                                            |
| store.contacts                                     | object   | [mobile, phone, email, whatsapp, telegram], ex. store.contacts.email                                     |
| store.social                                       | object   | [instagram, snapchat, twitter, youtube, facebook, pinterest, maroof, whatsapp], ex. store.social.twitter |
| store.settings                                     | object   |                                                                                                          |
| store.settings.auth.email_allowed                  | bool     |                                                                                                          |
| store.settings.auth.mobile_allowed                 | bool     |                                                                                                          |
| store.settings.auth.is_email_required              | bool     |                                                                                                          |
| store.settings.cart.apply_coupon_enabled           | bool     | Does visitor allowed to applay coupon in cart page                                                       |
| store.settings.product.total_sold_enabled          | bool     |                                                                                                          |
| store.settings.product.fit_type                    | ?string  | null when equal product card size is off, or ['cover', 'contain']                                        |
| store.settings.category.testimonial_enabled        | bool     | Show random testimonials in category page                                                                |
| store.settings.tax.number                          | ?string  |                                                                                                          |
| store.settings.tax.certificate                     | ?string  | certificate image url                                                                                    |
| store.settings.tax.taxable_prices_enabled          | bool     | Does tax included in the prices ex product_price 100 & tax is 15, price will be 115                      |
| store.settings.rating_enabled                      | bool     | Is one of: store_enabled or shipping_enabled or products_enabled                                         |
| store.settings.arabic_numbers_enabled              | bool     | Does the merchant wants the numbers to be shown as Arabic format                                         |
| store.settings.is_multilingual                     | bool     |                                                                                                          |
| store.settings.currencies_enabled                  | bool     |     
| theme                                              | Theme    |                                                                                                          |
| theme.id                                           | int      |                                                                                                          |
| theme.name                                         | string   |                                                                                                          |
| theme.mode                                         | string   | `live`, `preview`                                                                                        |
| theme.is_rtl                                       | bool     |                                                                                                          |
| theme.translations_hash                            | int      | to be used in case merchant updated frontend store translations                                          |
| theme.color                                        | object   |                                                                                                          |
| theme.color.primary                                | string   |                                                                                                          |
| theme.color.text                                   | string   | suitable text color comparing to `theme.primary.color`, #000000, #FFFFFF                                 |
| theme.color.reverse_primary                        | string   |                                                                                                          |
| theme.color.reverse_text                           | string   | if `theme.text_color=#000000` means that `theme.reverse_text_color=#FFFFFF`                              |
| theme.color.is_dark                                | bool     | Does main store color `theme.primary.color` considered as dim color?                                     |
| theme.color.darker(float alpha, ?string hexColor)  | string   | get darker color from `theme.primary.color` or from passed color, `alpha` range from 0.0-1.0             |
| theme.color.lighter(float alpha, ?string hexColor) | string   | get lighter color from `theme.primary.color` or from passed color, `alpha` range from 0.0-1.0            |
| theme.font                                         | ?object  | Salla predefined font, null when the theme doesn't have `fonts` feature                                  |
| theme.font.name                                    | string   | DINNextLTArabic-Regular, Amazon-Ember, Apple, Dubai, Estedad                                             |
| theme.font.url                                     | string   | css full url ex: 'https://my_store.test/dist/fonts/default.css'                                          |
| theme.settings                                     | object   | dynamic object with values of the `settings` in twilight.json ex. `theme.settings.topnav_is_dark`        |
| theme.settings.set(settingName, value)             | string   | set global var, then get it {{theme.settings.get('my_var','fallback') }}                                 |
| theme.settings.get(settingName, default=null)      | mixed    | get theme setting ex `theme.settings.get('my_var', 'fallback')`                                          |
#}
<!DOCTYPE html>
<html lang="en" dir="ltr">
<!-- بسم الله الرحمن الرحيم -->
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {{ theme.settings.set('placeholder', 'images/placeholder.png') }}

    {% include 'pages.partials.loading-screen-assets' %}

    <script defer data-cfasync="false" src="{{ 'product-card.js'|asset }}"></script>
    {# <script defer src="{{ 'main-menu.js'|asset }}"></script> #}

    {% block head_scripts %}{% endblock %}


    <script data-cfasync="false">
        window.header_is_sticky = "{{theme.settings.get('header_is_sticky', 'Default Value')}}"
        window.imageZoom = "{{theme.settings.get('imageZoom')}}"
        window.can_access_wallet = {{ user.can_access_wallet | json_encode }}
        
        // Initialize language on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Get stored language preference
            const storedLanguage = localStorage.getItem('currentLanguage');
            const urlLanguage = new URLSearchParams(window.location.search).get('lang');
            const userLanguage = '{{ user.language.code }}';
            
            // Determine the language to use - prioritize URL parameter and user language
            const languageToUse = urlLanguage || userLanguage || storedLanguage || 'en';
            
            // Update HTML attributes
            document.documentElement.lang = languageToUse;
            document.documentElement.dir = languageToUse === 'ar' ? 'rtl' : 'ltr';
            
            // Update localStorage to match the detected language
            if (languageToUse !== storedLanguage) {
                localStorage.setItem('currentLanguage', languageToUse);
                console.log('Master Layout: Updated localStorage to:', languageToUse);
            }
            
            console.log('Master Layout: Language initialized to:', languageToUse);
        });
        
        // Remove unwanted floating elements
        document.addEventListener('DOMContentLoaded', function() {
            // Function to hide unwanted elements
            function hideUnwantedElements() {
                // Hide any elements that might be floating search or cart interfaces
                const allElements = document.querySelectorAll('*');
                allElements.forEach(el => {
                    const style = window.getComputedStyle(el);
                    const classes = el.className || '';
                    const id = el.id || '';
                    
                    // Check if element is floating and contains search or cart
                    if (style.position === 'fixed' && 
                        (classes.includes('search') || classes.includes('cart') || 
                         id.includes('search') || id.includes('cart'))) {
                        el.style.display = 'none';
                        console.log('Hidden unwanted element:', el);
                    }
                });
            }
            
            // Run immediately
            hideUnwantedElements();
            
            // Run again after a short delay to catch elements added later
            setTimeout(hideUnwantedElements, 1000);
            setTimeout(hideUnwantedElements, 2000);
        });
    </script>
    
    {% hook 'head:start' %}
    {% hook head %}
    {% block styles %}{% endblock %}
    <link rel="stylesheet" href="{{ 'app.css' | asset }}">
    <link rel="stylesheet" href="{{ theme.font.path|cdn }}"/>
    <link rel="stylesheet" href="{{ 'fonts/sallaicons.css'|cdn }}"/>
    
    <style>
        :root {
            --font-main: '{{theme.font.name}}';
            --color-primary: {{ theme.color.primary }};
            --color-primary-dark: {{ theme.color.darker(0.15) }};
            --color-primary-light: {{ theme.color.lighter(0.15) }};
            --color-primary-reverse: {{ theme.color.reverse_text }};
        }
        
        /* Hide unwanted floating elements */
        body > div:not(.app-inner):not(.loader-init) {
            display: none !important;
        }
        
        /* Hide any floating action buttons outside the main content */
        body > [style*="position: fixed"]:not(.store-header):not(.footer) {
            display: none !important;
        }
        
        /* Hide search interfaces that might be automatically added */
        body > [class*="search"]:not(.store-header *) {
            display: none !important;
        }
        
        /* Hide cart icons that might be automatically added */
        body > [class*="cart"]:not(.store-header *) {
            display: none !important;
        }
        
        /* Hide unwanted Salla components but keep important ones */
        body > salla-*:not(salla-offer-modal):not(salla-login-modal):not(salla-user-menu):not(salla-cart-summary) {
            display: none !important;
        }
    </style>
    {# tracking services, custom css feature. #}
    {% hook 'head:end' %}
</head>
<body id="app" class="overflow-x-hidden {% hook 'body:classes' %}
  {{ theme.settings.get('footer_is_dark') ? ' footer-is-dark' : ' footer-is-light' }}
  {{ theme.settings.get('topnav_is_dark') ? ' topnav-is-dark' : '' }}
  {{ theme.settings.get('sticky_add_to_cart') ? ' is-sticky-product-bar' : '' }}
  " style="background-color:rgb(255, 255, 255);">
  <div class="loader-init"></div>
<noscript>
    To get full functionality of this site you need to enable JavaScript. Here is how
    <a href="https://www.enable-javascript.com/" rel="noreferrer"
       target="_blank">To enable JavaScript on webpage</a>.
</noscript>
<div class="app-inner flex flex-col min-h-full">
    {% hook 'body:start' %}
    {% component 'header.header' %}
    {% block content %}{% endblock %}
    {% component 'footer.footer' %}
</div>
{% hook 'body:end' %}
<script defer src="{{ 'app.js' | asset }}"></script>
<!-- Temporarily disabled product router to fix modal issue -->
<!-- <script defer src="{{ 'product-router.js' | asset }}"></script> -->

{# Twilight Components #}
<salla-offer-modal></salla-offer-modal>

{% if user.type=='guest' %}
    <salla-login-modal></salla-login-modal>
{% endif %}

<!-- Salla SDK Script -->
<script src="https://cdn.assets.salla.network/latest/@salla.sa/bridge-sdk/index.js"></script>

{% block scripts %}{% endblock %}
</body>
</html>
